#!/bin/bash
## Graficzny instalator kerneli e X t 7 3  - NeteXt'73
## przygotowanie kerneli e X t 7 3 - ext73@wp.pl
## przygotowanie skryptów optymalizacyjnych e X t 7 3
## autor skryptu NeteXt'73 - NetBit73 - netbit73@gmail.com
## Licencja: GPL v3: https://www.gnu.org/licenses/gpl.txt
#########################################################################################################################################################################
#procedury

source /opt/NeteXt73/procedury

#########################################################################################################################################################################
#Usługi

cd /tmp/netext73
petla_duza="tak"
while [ $petla_duza = "tak" ]; do
#sprawdzanie czy jest systemd - generowanie menu
	if [ "$(which systemd-analyze)" != "" ] && [ "$(systemd-analyze)" != "" ];then
	 petla="tak"
		while [ $petla = "tak" ]; do
		rm *.txt -f
		if [ "$(ps aux | grep 'python /opt/NeteXt73/czekaj.py' | wc -l)" = 1 ]; then
			please_wait
		fi
		systemctl list-unit-files | grep -v -E "@|apport|systemd*|plymouth|dbus|initd|alsa|console|udev|masked|static" | grep -e service -e 'forward.socket' | sed 's/●/ /g' | awk '{print $1}' | sed 's/-forward.socket//g' | sort | uniq  | sed 's/.service//g' > systemd.txt
		ls /etc/init.d | grep -v "README" > sysv.txt
		for i in $(cat sysv.txt); do
			if [ "$(ls -la /etc/init.d | grep $i | grep 'rwxr-xr-x')" != "" ]; then
				echo "FALSE "$i" +" >> uslugi_on1.txt
			else
				echo "FALSE "$i" -" >> uslugi_off1.txt
			fi
		done
		 for i in $(cat systemd.txt); do
			if [ "$(systemctl is-enabled $i | grep enabled)" != "" ];then
				echo "FALSE "$i" +" >> uslugi_on.txt
			elif [ "$(systemctl is-enabled $i | grep disabled)" != "" ];then
				echo "FALSE "$i" -" >> uslugi_off.txt
			fi
			if [ "$(cat sysv.txt | grep $i)" != "" ];then
				sed -i "/$i/ d" uslugi_on1.txt
				sed -i "/$i/ d" uslugi_off1.txt
			fi
		done
		cat uslugi_on1.txt uslugi_off1.txt > uslugi_sysv.txt
		cat uslugi_on.txt uslugi_off.txt uslugi_on1.txt uslugi_off1.txt | sort | uniq > uslugi.txt
		please_wait kill
		a=$(yad --center --on-top --height=$((680*$skala)) --width=$((600*$skala)) --window-icon="/opt/NeteXt73/ikony/uslugi.png" --image="/opt/NeteXt73/ikony/uslugi.png" --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --text="<span color=\"$kolor_textu\"><b>Services - automat</b></span>\n$TEXT_MENU_USLUGI2" --column="$TEXT_ZAZNACZ" --column="$TEXT_MENU_USLUGI3"  --column="$TEXT_MENU_USLUGI4" --checklist --list $(cat uslugi.txt))
			if [ $? = "0" ]; then
				if [ "$a" != "" ]; then
					please_wait
					echo $a | sed 's/|/\n/g' | sed '/^+/ d' | sed '/^-/ d' | sed '/^.*TRUE/ d' > zmiana_on_off.txt
					for a1 in $(cat zmiana_on_off.txt)
					do
						if [ "$(cat uslugi_sysv.txt | grep $a1 -x)" != "" ]; then
							if [ "$(ls -la /etc/init.d | grep $a1 | grep 'rwxr-xr-x')" != "" ]; then
								sudo service $a1 stop
								sudo chmod a-x /etc/init.d/$a1
							else
								sudo chmod a+x /etc/init.d/$a1
								sudo service $a1 start
							fi
						fi
						if [ "$(cat systemd.txt | grep $a1 -x)" != "" ]; then
							if [ "$(cat uslugi_on.txt | tr ' ' '\n' | grep $a1 -x)" != "" ]; then
								sudo systemctl stop $a1
								sudo systemctl disable $a1
								if [ "$(cat sysv.txt | grep $a1 -x)" != "" ]; then
									sudo service $a1 stop
									sudo chmod a-x /etc/init.d/$a1
								fi
							elif [ "$(cat uslugi_off.txt | tr ' ' '\n' | grep $a1 -x)" != "" ]; then
								sudo systemctl start $a1
								sudo systemctl enable $a1
								if [ "$(cat sysv.txt | grep $a1 -x)" != "" ]; then
									sudo chmod a+x /etc/init.d/$a1
									sudo service $a1 start
								fi
							fi
						fi
					done
				fi
			fi
			rm *.txt -f
		if [ -z "$a" ]; then
			opusc_mala_petle
		fi
		done
	else
		uslugi=$(yad --center --on-top --title="$nazwa_skryptu" --width=$((410*$skala)) --window-icon="/opt/NeteXt73/ikony/uslugi.png" --image="/opt/NeteXt73/ikony/uslugi.png" --text="<span color=\"$kolor_textu\">$TEXT_MENU_USLUGI</span>" --form --field=" :CB" "$TEXT_MENU_USLUGI0 upstart,sysV!$TEXT_MENU_USLUGI1C"  --button="gtk-ok:0" --button="$TEXT_POWROT:1" )
		klawisz=$?; uslugi=$(echo $uslugi | cut -d "|" -f 1)
		if [ $klawisz = 0 ]; then
		#usługisysv i upstart automat
			if [ "$uslugi" = "$TEXT_MENU_USLUGI0 upstart,sysV" ] ; then
				petla="tak"
				while [ $petla = "tak" ]; do
				#upstart
				upstart_test
				cat lista.txt | cut -d " " -f 1 > 1.txt #nazwa usługi
				sed -e 's/,//g' lista.txt | cut -d " " -f 2 | sed -e 's/start.*/wł/g' | sed -e 's/stop.*waiting*/wł/g'  > 2.txt #stan usługi

				paste -d " " 1.txt 2.txt  > upstart.txt
				for SOFT in $(ls /etc/init/*.conf-disabled | sed 's/\.conf-disabled//g' | cut -d "/" -f 4 | grep -v -E "cryptdisks-udev|network-interface|network-interface-security|wait-for-state"); do
				      echo "$SOFT wył" >> upstart.txt
				done

				sed -i -e 's/wł/on -/g' upstart.txt
				sed -i -e 's/wył/- off/g' upstart.txt

				#sysv

				#sprawdzenie zależności
				if [ "$(which rcconf)" = "" ]; then
					xterm  -T "rcconf" -e bash -c "sudo apt install rcconf -y"
				fi
				sudo rcconf --list | sort > sysv.txt
				cat sysv.txt | awk '{print $1}' > nazwy_uslug.txt #nazwa usługi
				sed -i 's/ on/X/g' sysv.txt
				sed -i 's/ off/-/g' sysv.txt
				for i in $(seq 1 $(wc -l sysv.txt | awk '{print $1}')); do
				head sysv.txt -n$i | tail -n1 > 10.txt
					if  [ "$(grep "X" 10.txt | head -n1)" != "" ]
					then
						echo -e "on\t-">> stan_uslug.txt
					else
						echo -e "-\toff" >> stan_uslug.txt
					fi
				done  2>&1 | pobieranie

				paste -d " " nazwy_uslug.txt stan_uslug.txt > sysv.txt
				#usunięcie usług upstart z sysV
				ls /etc/init/*.conf* | sed 's/\.conf.*//g' | cut -d "/" -f 4 | tr '\n' ' ' > 1.txt
				for i in $(cat 1.txt) ; do
					sed -i "/$i/d" sysv.txt
				done  2>&1 | pobieranie

				cat upstart.txt sysv.txt | sort > uslugi.txt

				sed -i "s/ on - / on -\n/g" uslugi.txt
				sed -i "s/ - off / - off\n/g" uslugi.txt
				sed -i -e '/^[^#]/s:^:FALSE :' uslugi.txt

				a=$(yad --center --height=$((680*$skala)) --width=$((490*$skala))   --window-icon="/opt/NeteXt73/ikony/uslugi.png" --image="/opt/NeteXt73/ikony/uslugi.png" --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --text="<span color=\"$kolor_textu\"><b>SysV, Upstart - automat</b></span>\n$TEXT_MENU_USLUGI2" --column="$TEXT_ZAZNACZ" --column="$TEXT_MENU_USLUGI3"  --column="$TEXT_MENU_USLUGI4" --column="$TEXT_MENU_USLUGI5"  --checklist --list $(cat uslugi.txt))
				if [ $? = "0" ]; then
					if [ "$a" != "" ]; then
						echo $a | sed 's/|/\n/g' | sed '/^on/ d' | sed '/^off/ d' | sed '/^-/ d' | sed '/^.*TRUE/ d' > 12.txt
						for a1 in $(cat 12.txt)
						do
							if [ "$(grep $a1 sysv.txt)" != "" ]; then
								if [ "$(grep $a1 sysv.txt | awk '{print $2}')" = "on" ]; then
									#wyłączanie sysv
									sudo service $a1 stop
									sudo update-rc.d -f $a1 remove
									sudo update-rc.d -f $a1 remove
								else
									#włączanie sysv
									sudo update-rc.d -f $a1 remove
									sudo update-rc.d -f $a1 remove
									sudo update-rc.d $a1 defaults
									sudo service $a1 start
								fi
							elif [ "$(grep $a1 upstart.txt)" != "" ]; then
								if [ -e /etc/init/$a1.conf-disabled ]; then
									#włączanie upstart
									sudo update-rc.d -f $a1 remove
									sudo update-rc.d -f $a1 remove
									sudo update-rc.d -f $a1 defaults
									sudo  mv /etc/init/$a1.conf-disabled /etc/init/$a1.conf
									sudo service $a1 start
								elif [ -e /etc/init/$a1.conf ]; then
									#wyłączanie upstart
									sudo update-rc.d -f $a1 remove
									sudo update-rc.d -f $a1 remove
									sudo service $a1 stop
									sudo mv /etc/init/$a1.conf /etc/init/$a1.conf-disabled
								fi
							fi
						done
					fi
				fi
				if [ -z "$a" ]; then
					opusc_mala_petle
				fi
				done
			#Upstart - expert
			elif [ "$uslugi" = "$TEXT_MENU_USLUGI1C" ] ; then
				petla="tak"
				while [ $petla = "tak" ]; do
					upstart_test

					cat lista.txt | cut -d " " -f 1 > 1.txt
					sed -e 's/,//g' lista.txt | cut -d " " -f 2 > 2.txt
					cut lista.txt -d " " -f 4 | sed -e "s/^$/$TEXT_BRAK/g" > 3.txt
					paste -d " " 1.txt 2.txt 3.txt  > 4.txt
					for SOFT in $(ls /etc/init/*.conf-disabled | sed 's/\.conf-disabled//g' | cut -d "/" -f 4 | grep -v -E "cryptdisks-udev|network-interface|network-interface-security|wait-for-state")
					do
					#do sprawdzenia
						echo "$SOFT off $TEXT_BRAK" >> 4.txt
					done  2>&1 | pobieranie
					a=$(yad --center --height=$((540*$skala)) --width=$((490*$skala)) --window-icon="/opt/NeteXt73/ikony/uslugi.png" --image="/opt/NeteXt73/ikony/uslugi.png" --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --text="<span color=\"$kolor_textu\"><b>Upstart - expert</b></span>\n$TEXT_MENU_USLUGI8" --column="$TEXT_MENU_USLUGI9" --column="$TEXT_MENU_USLUGI10" --column="$TEXT_MENU_USLUGI11" --list --list $(cat 4.txt))
					if [ $? = "0" ]; then
						a=$(echo $a | cut -d '|' -f 1)
						if [ "$a" != "" ]; then
							rm *.txt -f
							usl=$( yad --center --height=$((240*$skala)) --width=$((560*$skala)) --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --text="$TEXT_MENU_USLUGI12 $a" --list --radiolist --column="$TEXT_ZAZNACZ" --column="$TEXT_MENU" --column="$TEXT_OPIS"\
							FALSE "start" 	"$TEXT_MENU_USLUGI22A"\
							TRUE "stop" 		"$TEXT_MENU_USLUGI22B"\
							FALSE "enable" 	"$TEXT_MENU_USLUGI22C"\
							FALSE "disable" 	"$TEXT_MENU_USLUGI22D")
							if [ $? = 0 ]; then
								usl=$(echo $usl | cut -d '|' -f 2)
								export usl1=$usl; export a1=$a
								if [ "$usl" = "start" ]; then
									if [ -e /etc/init/$a1.conf ]; then
										sudo service $a1 $usl1
									else
										sudo  mv /etc/init/$a1.conf-disabled /etc/init/$a1.conf; sudo service $a1 start
									fi
								elif [ "$usl" = "stop" ]; then
									if [ -e /etc/init/$a1.conf ]; then
										sudo service $a1 $usl1
									else
										dymek  -i $ikona_info1 "$TEXT_INFORMACJA" "$TEXT_MENU_USLUGI34"
									fi
								elif [ "$usl" = "enable" ]; then
									echo /etc/int/$a1.conf
									if [ -e /etc/init/$a1.conf-disabled ]; then
										sudo  mv /etc/init/$a1.conf-disabled /etc/init/$a1.conf; sudo service $a1 start
									else
										dymek  -i $ikona_info1 "$TEXT_INFORMACJA" "$TEXT_MENU_USLUGI35"
									fi
									echo /etc/int/$a1.conf-disabed
								elif [ "$usl" = "disable" ]; then
									if [ -e /etc/init/$a1.conf ]; then
										sudo service $a1 stop; sudo mv /etc/init/$a1.conf /etc/init/$a1.conf-disabled
									else
										dymek  -i $ikona_info1 "$TEXT_INFORMACJA" "$TEXT_MENU_USLUGI37"
									fi
								fi
							fi
						fi
					fi
					if [ -z "$a" ]; then
						opusc_mala_petle
					fi
				  done
			fi
		fi
	fi
	if [ -z "$uslugi" ]; then
		opusc_petle
	fi
done
