#!/bin/bash
## Graficzny instalator kerneli e X t 7 3  - NeteXt'73
## przygotowanie kerneli e X t 7 3 - ext73@wp.pl
## przygotowanie skryptów optymalizacyjnych e X t 7 3
## autor skryptu NeteXt'73 - NetBit73 - netbit73@gmail.com
## Licencja: GPL v3: https://www.gnu.org/licenses/gpl.txt
#########################################################################################################################################################################
#procedury

source /opt/NeteXt73/procedury

instaluj_NV(){
	echo "nie" > /tmp/netext73/ok.txt
	naglowek > instaluj.sh
	nvidia_naglowek >> instaluj.sh
	#sprawdzanie czy jest nvidia_optimus
	if [ "$(lspci | grep -i VGA | grep -i Intel)" != "" ] && { [ "$(lspci | grep -i GeForce | grep -i NVIDIA)" != "" ] || [ "$(lspci | grep -i NVIDIA | grep -i Quadro)" != "" ]; };then
		nvidia_optimus >> instaluj.sh
	else
		nvidia >> instaluj.sh
	fi
	nvidia_stopka >> instaluj.sh
	instalacja2
}


#########################################################################################################################################################################
#instalator sterowników do grafik Nvidia
cd /tmp/netext73

usun(){
rm *.txt* -f; rm *.sh -f; rm *.html* -f
rm *.deb -f
rm nvidia-settings -f
}

usun
if [ "$1" = "nvidia" ]; then
	katalog_pulpit="/home/$userek/$(grep XDG_DESKTOP_DIR /home/$userek/.config/user-dirs.dirs | cut -d '/' -f 2 | cut -d '"' -f 1)"

	#sprawdzanie Optimusa
	if [ "$(lspci | grep -i VGA | grep -i Intel)" != "" ] && { [ "$(lspci | grep -i GeForce | grep -i NVIDIA)" != "" ] || [ "$(lspci | grep -i NVIDIA | grep -i Quadro)" != "" ]; };then
		if [ "$(ls $katalog_pulpit/ | grep \.desktop)" = "" ]; then
			menu="--button="gtk-ok:0" --button="$TEXT_POWROT:1" --button="primus-menu-start:2""
		else
			menu="--button="gtk-ok:0" --button="$TEXT_POWROT:1" --button="primus-menu-start:2" --button="primus-desktop-start:3""
		fi

	else
		menu="--button="gtk-ok:0" --button="$TEXT_POWROT:1""
	fi

	if [ -e /tmp/netext73/sumy/sumy_kontrolne.txt ]; then
		grep nvidia /tmp/netext73/sumy/sumy_kontrolne.txt | grep -v nvidia-optimus | sed 's/.tar.xz//' | awk '{print $2}' | sort -r > 2a.txt
		lista=$(cat 2a.txt | tr '\n' '!' | sed -e '$s/!$//g' )
		ster=$(yad --center --on-top --title="$nazwa_skryptu" --width=$((410*$skala)) --window-icon="/opt/NeteXt73/ikony/nvidia.png" --image="/opt/NeteXt73/ikony/nvidia.png" --text="$TEXT_STEROWNIKI2 <span color=\"$kolor_textu\"><b>Nvidia</b></span>" --form --field="$TEXT_STEROWNIK:CB" "$lista" $menu)
		klawisz=$?; ster=$(echo $ster | cut -d "|" -f 1)
		if [ "$ster" != "" ] && [ "$klawisz" = "0" ]; then
			nvidiaoptimus=$(grep nvidia-optimus-ext /tmp/netext73/sumy/sumy_kontrolne.txt | awk '{print $2}' | sed 's/.tar.xz//g')
			yad_wget $adres_sterownikow/$ster.tar.xz $adres_sterownikow/$nvidiaoptimus.tar.xz
			if [ -e $ster.tar.xz ] && [ "$(grep $(md5sum $ster.tar.xz) $sumy_kontrolne)" != "" ] && [ -e $nvidiaoptimus.tar.xz ] && [ "$(grep $(md5sum $nvidiaoptimus.tar.xz) $sumy_kontrolne)" != "" ]; then
				rm -f index.html 2a.txt
				tar -Jxf $ster.tar.xz
				tar -Jxf $nvidiaoptimus.tar.xz -C /tmp/
				if [ -e $ster ]; then
					cd $ster
					export wersja_nvidia=$(echo $ster"_amd64" | sed 's/nvidia-//')
					instaluj_NV
				else
					dymek -i $warning1 "$TEXT_UWAGA" "$TEXT_ROZPAKOWANIE_ERROR"
				fi
			else
				yad --center --error --title="$nazwa_skryptu"  --window-icon="/opt/NeteXt73/ikony/error.png" --image="/opt/NeteXt73/ikony/error.png" --button="gtk-ok:0" --title="$nazwa_skryptu"  --text="$TEXT_SUMA_KONTROLNA"
			fi
		elif [ "$klawisz" = "2" ] || [ "$klawisz" = "3" ]; then
			petla="tak"
			while [ $petla = "tak" ]; do
				rm primusrun*.txt -f
				if [ "$klawisz" = "2" ]; then
				      katalog="/usr/share/applications"
				elif [ "$klawisz" = "3" ]; then
				      katalog="$katalog_pulpit"
				fi
				IFS=$'\n'
				for i in $(ls $katalog/ | grep desktop); do
					nazwa=$(echo "$i" | sed 's/.desktop//')
					#taskset 0xFFFFFFFF primusrun
					#taskset 0xFFFFFFFF optirun -b primus
					if [ "$(grep 'taskset 0xFFFFFFFF optirun -b primus' $katalog/$i)" = "" ]; then
						echo "FALSE@"$nazwa"@-@off" >> primusrun1.txt 
					else
						echo "FALSE@"$nazwa"@on@-" >> primusrun1.txt 
					fi
				done
					cat primusrun1.txt | tr '\n' '@' > primusrun.txt
					IFS='@'
					primus=$(yad --center --height=$((680*$skala)) --width=$((680*$skala))   --window-icon="/opt/NeteXt73/ikony/uslugi.png" --image="/opt/NeteXt73/ikony/uslugi.png" --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --text="<span color=\"$kolor_textu\"><b>Primusrun - automat</b></span>\n" --column="$TEXT_ZAZNACZ" --column="$TEXT_MENU_USLUGI39"  --column="$TEXT_MENU_USLUGI4" --column="$TEXT_MENU_USLUGI5" --item-separator='@' --checklist --list $(cat primusrun.txt))
					if [ $? = "0" ]; then
						if [ "$primus" != "" ]; then
							rm -f index.html 2a.txt
							echo $primus | sed 's/|/\n/g' | sed '/^on/ d' | sed '/^off/ d' | sed '/^-/ d' | sed '/^.*TRUE/ d' > zaznaczone.txt
							naglowek > instaluj.sh
							IFS=$'\n'
							for i in $(cat zaznaczone.txt); do
							echo $i
								if [ "$(grep 'taskset 0xFFFFFFFF optirun -b primus' "$katalog/$i.desktop")" = "" ]; then
									echo "sudo sed -i \"s/Exec=taskset 0xFFFFFFFF primusrun /Exec=/g\" \"$katalog/$i.desktop\"" >> instaluj.sh
									echo "sudo sed -i \"s/Exec=/Exec=taskset 0xFFFFFFFF optirun -b primus /g\" \"$katalog/$i.desktop\"" >> instaluj.sh
									if [ "$klawisz" = "3" ] && [ $USER = "root" ]; then
										echo "sudo chown $userek:$userek  \"$katalog/$i.desktop\"" >> instaluj.sh
									fi
								else
									echo "sudo sed -i \"s/Exec=taskset 0xFFFFFFFF optirun -b primus /Exec=/g\" \"$katalog/$i.desktop\"" >> instaluj.sh
									echo "sudo sed -i \"s/Exec=taskset 0xFFFFFFFF primusrun /Exec=/g\" \"$katalog/$i.desktop\"" >> instaluj.sh
									if [ "$klawisz" = "3" ] && [ $USER = "root" ]; then
										echo "sudo chown $userek:$userek  \"$katalog/$i.desktop\"" >> instaluj.sh
									fi
								fi
							done
							instalacja2
							IFS=$' \t\n'
						fi
					fi
					rm *.txt -f
					if [ -z "$primus" ]; then
						opusc_mala_petle
					fi
			done
		fi
	fi
elif [ "$1" = "mesa3d" ]; then
	if [ "$(echo $WERSJA_UBUNTU | grep -i -x -E "$wspierane_wersje")" = "" ]; then
		dymek -i $warning1 "$TEXT_UWAGA" "$TEXT_STEROWNIKI3"
	else
		if [ "$(echo $WERSJA_UBUNTU | grep -i -x -E "$wspierane_wersje")" != "" ]; then
			lista="mesa 17.x stable!mesa 17.x testing!remove"
		elif [ "$(echo $WERSJA_UBUNTU | grep -i -x -E "$wspierane_wersje")" != "" ]; then
			lista="mesa 17.x testing!remove"
		fi
		ster=$(yad --center --on-top --title="$nazwa_skryptu" --width=$((310*$skala)) --window-icon="/opt/NeteXt73/ikony/mesa3d.png" --image="/opt/NeteXt73/ikony/mesa3d.png" --text="$TEXT_STEROWNIKI2 <span color=\"$kolor_textu\"><b>Mesa3D</b></span>\n\nInstalled: $(glxinfo | grep "OpenGL version" | grep "Mesa")" --form --field="$TEXT_STEROWNIK:CB" "$lista" --button="gtk-ok:0" --button="$TEXT_POWROT:1")
		klawisz=$?; ster=$(echo $ster | cut -d "|" -f 1)
		if [ "$ster" != "" ] && [ "$klawisz" = "0" ]; then
			naglowek > instaluj.sh
			if [ "$(echo $ster | grep stable)" != "" ]; then
				echo "sudo ppa-purge ppa:oibaf/graphics-drivers"  >> instaluj.sh
				echo "sudo ppa-purge ppa:joe-yasi/xorg-xenial"  >> instaluj.sh
				echo "sudo add-apt-repository ppa:paulo-miguel-dias/pkppa -y" >> instaluj.sh
				echo "sudo apt update" >> instaluj.sh
				echo "sudo apt install vainfo -y" >> instaluj.sh
				echo "sudo apt dist-upgrade -y" >> instaluj.sh
			elif [ "$(echo $ster | grep testing)" != "" ]; then
				echo "sudo ppa-purge ppa:joe-yasi/xorg-xenial"  >> instaluj.sh
				echo "sudo ppa-purge ppa:paulo-miguel-dias/pkppa"  >> instaluj.sh
				echo "sudo add-apt-repository ppa:oibaf/graphics-drivers -y" >> instaluj.sh
				echo "sudo apt update" >> instaluj.sh
				echo "sudo apt install vainfo -y" >> instaluj.sh
				echo "sudo apt dist-upgrade -y" >> instaluj.sh
			elif [ "$(echo $ster | grep remove)" != "" ]; then
				echo "sudo ppa-purge ppa:joe-yasi/xorg-xenial"  >> instaluj.sh
				echo "sudo ppa-purge ppa:paulo-miguel-dias/pkppa"  >> instaluj.sh
				echo "sudo ppa-purge ppa:oibaf/graphics-drivers"  >> instaluj.sh
			fi
			instalacja
		fi
	fi
fi
usun
