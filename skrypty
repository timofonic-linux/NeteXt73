#!/bin/bash
## Graficzny instalator kerneli e X t 7 3  - NeteXt'73
## przygotowanie kerneli e X t 7 3 - ext73@wp.pl
## przygotowanie skryptów optymalizacyjnych e X t 7 3
## autor skryptu NeteXt'73 - NetBit73 - netbit73@gmail.com
## Licencja: GPL v3: https://www.gnu.org/licenses/gpl.txt
#########################################################################################################################################################################
#procedury

source /opt/NeteXt73/procedury


#########################################################################################################################################################################
#Skrypty

cd /tmp/netext73
#testy
if [ "$1" = "testy" ]; then
	menu="BurnTest!$MENU01!$MENU02!$MENU03!$MENU04!$MENU_RKHUNTER!$MENU_HDD"  #$MENU15!$MENU16" - wyłączone testy glmark2
	ikonka="/opt/NeteXt73/ikony/testy.png"

#inne skrypty
else
	if [ -e ~/.config/akonadi/akonadiserverrc ]; then
		if [ "$(grep 'StartServer=true' ~/.config/akonadi/akonadiserverrc)" != "" ];then
			MENU19="$MENU19a"
		else
			MENU19="$MENU20a"
		fi
	else
		MENU19=""
	fi
	if [ "$(cat /etc/sysctl.conf | grep 'net.ipv6.conf.all.disable_ipv6 = 1')" = "" ]; then
		menu="$MENU3!$MENU5!$MENU6!$MENU7!$MENU14!$MENU17!$MENU18!$MENU19"
	else
		menu="$MENU3!$MENU5!$MENU6!$MENU8!$MENU14!$MENU17!$MENU18!$MENU19"
	fi
	if [ "$MENU19" = "" ]; then
		menu=$(echo $menu | sed -e '$s/\!$//g')
	fi
	ikonka="/opt/NeteXt73/ikony/skrypty.png"
fi

skrypt=$(yad --center --title="$nazwa_skryptu" --window-icon=$ikonka --image=$ikonka --form --field="$TEXT_DEINSTALATOR1:CB" "$menu" --button="gtk-ok:0" --button="$TEXT_POWROT:1"  )
klawisz=$?; skrypt=$(echo $skrypt | cut -d "|" -f 1)
if [ $klawisz = 0 ]; then

	#kasujem dane po konfigach
	if [ "$skrypt" = "$MENU3" ]; then
		if [ "$(dpkg -l | grep '^rc' | awk '{print $2}' | head -n1)" != "" ]; then
			xterm -T "configi" -e bash -c "echo \"$TEXT_INSTALACJA1\"; sudo dpkg -l | grep '^rc' | awk '{print \$2}' | xargs sudo dpkg --purge; echo -e \"$TEXT_INSTALACJA2\" ;read ent"
		else
			yad --center --info --title="$nazwa_skryptu"  --window-icon="/opt/NeteXt73/ikony/info.png" --image="/opt/NeteXt73/ikony/info.png" --button="gtk-ok:0" --text="$TEXT_CONFIG1" 
		fi

	#RAM
	elif [ "$skrypt" = "$MENU14" ]; then
		xterm -T "free mem" -e bash -c "echo -e \"$TEXT_RAM6\n\"; echo \"$TEXT_RAM7\"; free -m; sync; sudo bash -c 'echo 3 > /proc/sys/vm/drop_caches'; echo -e \"\n$TEXT_RAM8\"; free -m; echo -e \"$TEXT_INSTALACJA2\"; read ent"

	#odpalamy tasksel
	elif [ "$skrypt" = "$MENU5" ]; then
		cd /tmp/netext73
		xterm -T "Tasksel" -e bash -c "echo -e \"$TEXT_TASKSEL1\"; sudo tasksel; echo -e \"$TEXT_INSTALACJA2\"; read ent"

	#synchronizuj czas z internetu
	elif [ "$skrypt" = "$MENU6" ]; then
		xterm -T "time" -e bash -c "echo \"$TEXT_INSTALACJA1\"; sudo ntpdate tempus1.gum.gov.pl; echo -e \"$TEXT_INSTALACJA2\" ;read ent"
	#ipv6 off

	elif [ "$skrypt" = "$MENU7" ]; then
		naglowek > instaluj.sh
		ipv6_off >> instaluj.sh
		instalacja

	#ipv6 on
	elif [ "$skrypt" = "$MENU8" ]; then
		naglowek > instaluj.sh
		ipv6_on >> instaluj.sh
		instalacja

	#OPTIMUS FIX
	elif [ "$skrypt" = "$MENU17" ]; then
		cat /opt/NeteXt73/APM/nvidia-optimus-intel-drm-fix.sh > instaluj.sh
		instalacja

	#burntest
	elif [ "$skrypt" = "BurnTest" ]; then
		burntest

	#akonadi on/off
	elif [ "$skrypt" = "$MENU19" ]; then
		if [ "$MENU19" = "$MENU20a" ]; then
			sed -i 's/StartServer=false/StartServer=true/g' ~/.config/akonadi/akonadiserverrc
		elif [ "$MENU19" = "$MENU19a" ]; then
			sed -i 's/StartServer=true/StartServer=false/g' ~/.config/akonadi/akonadiserverrc
		fi

	#sysbench
	elif [ "$(echo $skrypt | grep 'sysbench')" != "" ]; then
		#zmienne
		a0="Doing"
		a1="Number of threads:"
		a2="total time:"
		a3="total number of events:"
		a4="total time taken by event execution:"
		a5="min:"
		a6="avg:"
		a7="max:"
		a8="approx.  95 percentile:"
		a9="events (avg/stddev):"
		a10="execution time (avg/stddev):"

		#katalog roboczy skryptu
		cd ~/.netext73/sysbench
		#procedury

		info_test(){
			#yad --center --info --title="$nazwa_skryptu"  --window-icon="/opt/NeteXt73/ikony/info.png" --image="/opt/NeteXt73/ikony/info.png" --button="gtk-ok:0" --text="$TEXT_SYSBENCH_PROGRESS" --timeout=$1
			please_wait
		}

		zrob_test(){
			DATE=$(date +"%Y-%m-%d@%H:%M")
			if [ "$2" = "cpu" ]; then
			      echo "uname $(uname -r)" > cpu_$(uname -r)_$DATE-sysbench.log
			      sysbench --num-threads=$1 --test=cpu run >> cpu_$(uname -r)_$DATE-sysbench.log
			      echo "test_time : " $DATE >> cpu_$(uname -r)_$DATE-sysbench.log
			else
			      echo "uname $(uname -r)" > memory_$(uname -r)_$DATE-sysbench.log
			      sysbench --num-threads=$1 --test=memory run >> memory_$(uname -r)_$DATE-sysbench.log
			      echo "test_time : " $DATE >> memory_$(uname -r)_$DATE-sysbench.log
			fi
			please_wait kill
		}

		wynik_testu(){
			yad --center --title="$nazwa_skryptu" --width=$((610*$skala)) --window-icon="/opt/NeteXt73/ikony/NeteXt73.png" --image="/opt/NeteXt73/ikony/NeteXt73.png" --button="gtk-ok:0" --form \
			--field="uname -r:RO" "$(grep "uname" $1 | cut -d " " -f 2 )" \
			--field="$(grep "$a0" $1 | sed 's/Doing //'):RO" "YES" \
			--field="$a1:RO" "$(grep "$a1" $1 | sed 's/.*: *//')" \
			--field="Test execution summary - $a2:RO" "$(grep "$a2" $1 | sed 's/.*: *//')" \
			--field="Test execution summary - $a3:RO" "$(grep "$a3" $1 | sed 's/.*: *//')" \
			--field="Test execution summary - $a4:RO" "$(grep "$a4" $1 | sed 's/.*: *//')" \
			--field="per-request statistics $a5:RO" "$(grep "$a5" $1 | sed 's/.*: *//')" \
			--field="per-request statistics $a6:RO" "$(grep "$a6" $1 | sed 's/.*: *//')" \
			--field="per-request statistics $a7:RO" "$(grep "$a7" $1 | sed 's/.*: *//')" \
			--field="per-request statistics $a8:RO" "$(grep "$a8" $1 | sed 's/.*: *//')" \
			--field="Threads fairness $a9:RO" "$(grep "$a9" $1 | sed 's/.*: *//')" \
			--field="Threads fairness $a10:RO" "$(grep "$a10" $1 | sed 's/.*: *//')" 
		}

		porownanie(){
			rm pliki -f
			IFS=$' \t\n'
			for i in $(ls *sysbench.log | grep $1 ); do
				if [ "$(grep test_time $i)" = "" ]; then
					rm $i
				else
					grep "uname" $i | cut -d " " -f 2 >> pliki
					grep "test_time" $i | sed 's/test_time : *//' >> pliki
					grep "$a1" $i | sed 's/.*: *//' >> pliki
					grep "$a2" $i | sed 's/.*: *//' >> pliki
					grep "$a3" $i | sed 's/.*: *//' >> pliki
					grep "$a4" $i | sed 's/.*: *//' >> pliki
					grep "$a5" $i | sed 's/.*: *//' >> pliki
					grep "$a6" $i | sed 's/.*: *//' >> pliki
					grep "$a7" $i | sed 's/.*: *//' >> pliki
					grep "$a8" $i | sed 's/.*: *//' >> pliki
					grep "$a9" $i | sed 's/.*: *//' >> pliki
					grep "$a10" $i | sed 's/.*: *//' >> pliki
				fi
			done
			if [ "$1" = "memory" ]; then
				ikona="/opt/NeteXt73/ikony/ram.png"
			else
				ikona="/opt/NeteXt73/ikony/microcode.png"
			fi
			if [ "$2" = "usun" ]; then
				pliczek=$(yad --center --title="$nazwa_skryptu" --text="$skrypt" --width=$((1024*$skala)) --height=$((450*$skala)) --window-icon=$ikona --image=$ikona \
			--column="uname -r" --column="test dates:" --column="$(echo $a1 | sed 's/ of/\nof/')" --column="$a2" --column="$(echo $a3 | sed 's/ of/\nof/')" --column="$(echo $a4 | sed 's/ event/\nevent/' | sed 's/ taken/\ntaken/' )" --column="$a5"  --column="$a6" --column="$a7" --column="$(echo $a8 | sed 's/ 95/\n95/')" --column="$(echo $a9 | sed 's/(/\n(/')" --column="$(echo $a10 | sed 's/(/\n(/')" --list $(cat pliki)  --button="$TEXT_USUN_WYNIK:0" --button="$TEXT_ZAMKNIJ:1")
			else
				pliczek=$(yad --center --title="$nazwa_skryptu" --text="$skrypt" --width=$((1024*$skala)) --height=$((450*$skala)) --window-icon=$ikona --image=$ikona \
			--column="uname -r" --column="test dates:" --column="$(echo $a1 | sed 's/ of/\nof/')" --column="$a2" --column="$(echo $a3 | sed 's/ of/\nof/')" --column="$(echo $a4 | sed 's/ event/\nevent/' | sed 's/ taken/\ntaken/' )" --column="$a5"  --column="$a6" --column="$a7" --column="$(echo $a8 | sed 's/ 95/\n95/')" --column="$(echo $a9 | sed 's/(/\n(/')" --column="$(echo $a10 | sed 's/(/\n(/')" --list $(cat pliki)   --button="$TEXT_ZAMKNIJ:1")
			fi
			klawisz=$?; pliczek=$(echo $pliczek | cut -d "|" -f 2)
			if [ "$klawisz" = "0" ]; then
				rm $(ls | grep $pliczek | grep $1)
			fi
			rm pliki -f
		}

		petla="tak"
		while [ $petla = "tak" ]; do
			if [ "$skrypt" = "$MENU01" ]; then
				info_test 5 CPU &
				zrob_test $(grep 'model name' /proc/cpuinfo | wc -l ) cpu
				wynik_testu cpu_$(uname -r)_$DATE-sysbench.log
				porownanie cpu
			elif [ "$skrypt" = "$MENU02" ]; then
				info_test 25 MEMORY &
				zrob_test $(grep 'model name' /proc/cpuinfo | wc -l ) memory
				wynik_testu memory_$(uname -r)_$DATE-sysbench.log
				porownanie memory
			elif [ "$skrypt" = "$MENU03" ]; then
				porownanie cpu usun
			elif [ "$skrypt" = "$MENU04" ]; then
				porownanie memory usun
			fi
			if [ -z "$pliczek" ]; then
				petla="nie"
			fi
		done

	#glmark
	elif [ "$(echo $skrypt | grep 'glmark')" != "" ]; then
		#katalog roboczy skryptu
		cd ~/.netext73/glmark2

		#procedury
		zrob_test(){
			DATE=$(date +"%Y-%m-%d@%H:%M")
			echo "uname $(uname -r)" > $(uname -r)_$DATE-glmark2.log
			glmark2 >> $(uname -r)_$DATE-glmark2.log
			echo "test_time: " $DATE >> $(uname -r)_$DATE-glmark2.log
		}

		wynik_testu(){
			rm *.txt -f
			cat $1 | tr -d "\015" | grep '\[' | sed 's/FPS:/$/g' | cut -d '$' -f 1 | sed 's/ //g' > kolumna1.txt
			cat $1 | tr -d "\015" | grep '\[' | sed 's/.*FPS://g' | awk '{print $1}' > kolumna2.txt
			cat $1 | tr -d "\015" | grep '\[' | sed 's/.*FrameTime://g' | sed 's/ //g' |awk '{print $1}' > kolumna3.txt
			paste -d " " kolumna1.txt kolumna2.txt kolumna3.txt > kolumny.txt
			wynik="$(grep "glmark2 Score:" $1 | sed "s/glmark2 Score:[[:space:]]*//g" | sed "s/[[:space:]]//g")"
			yad --center --title="$nazwa_skryptu" --text="glmark2 score: $wynik" --width=$((880*$skala)) --height=$((780*$skala)) --window-icon="/opt/NeteXt73/ikony/NeteXt73.png" --image="/opt/NeteXt73/ikony/NeteXt73.png" --button="gtk-ok:0" --list $(cat kolumny.txt) \
			--column="Name" --column="FPS:" --column="FrameTime:"
				rm *.txt -f
		}

		porownanie(){
			petla="tak"
			while [ $petla = "tak" ]; do
				IFS=$' \t\n'
				rm tymczasowy.txt -f
				#walidacja wyników
				for i in $(ls *glmark2.log ); do
					if [ "$(cat $i | tr '\n' ' ' | grep test_time | grep loop | grep function | grep conditionals | grep shadow | grep buffer | grep pulsar | grep effect2d | grep bump | grep shading | grep texture | grep buil)" = "" ]; then 
						rm $i -f
					fi
				done 2>&1 | pobieranie
				for i in $(ls *glmark2.log ); do
					grep "uname" $i | cut -d " " -f 2 >> tymczasowy.txt
					echo -e "\n" >> tymczasowy.txt
					for a in $(echo test_time: GL_VENDOR: GL_RENDERER: GL_VERSION:); do
						grep "$a" $i | sed "s/$a[[:space:]]*//g" | sed 's/^[ \t]*//' | sed 's/ $//' | head -n 1 >> tymczasowy.txt
						echo -e "\n" >> tymczasowy.txt
					done
					grep "glmark2 Score:" $i | sed "s/glmark2 Score:[[:space:]]*//g" | sed "s/[[:space:]]//g" >> tymczasowy.txt
					echo -e "\n" >> tymczasowy.txt
					grep "glmark2" $i  | sed "s/glmark2[[:space:]]*//g" | sed 's/^[ \t]*//' | sed 's/ $//' | head -n 1 >> tymczasowy.txt
					echo -e "\n" >> tymczasowy.txt
				done
				sed -i '/^[ \t]*$/ d' tymczasowy.txt
				IFS=$'\n'
				pliczek=$(yad --center --on-top --title="$nazwa_skryptu" --text="$MENU16" --width=$((1024*$skala)) --height=$((450*$skala)) --window-icon="/opt/NeteXt73/ikony/glmark.png" --image="/opt/NeteXt73/ikony/glmark.png" \
				--column="uname -r" --column="test dates:" --column="GL_VENDOR:" --column="GL_RENDERER:" --column="GL_VERSION:" --column="Total score:" --column="glmark2 version:" --separator=$'\n' --list $(cat tymczasowy.txt) --button="$TEXT_USUN_WYNIK:0"  --button="$TEXT_ZAMKNIJ:1" )
				klawisz=$?; pliczek=$(echo $pliczek | cut -d " " -f 2)
				if [ "$klawisz" = "0" ]; then
					rm $(ls | grep $pliczek)
					rm tymczasowy.txt -f
				else
					petla="nie"
					rm tymczasowy.txt -f
				fi
			done
		}
		if [ "$skrypt" = "$MENU15" ]; then
			zrob_test
			wynik_testu $(uname -r)_$DATE-glmark2.log
			porownanie
		elif [ "$skrypt" = "$MENU16" ]; then
			porownanie
		fi
	#kill process
	elif [ "$skrypt" = "$MENU18" ]; then
		kill_process
	elif [ "$skrypt" = "$MENU_RKHUNTER" ]; then
		naglowek 																> instaluj.sh
		if [ ! -e /usr/local/bin/rkhunter ]; then
			echo "tar -xvf /opt/NeteXt73/rkhunter.tar.gz -C /tmp/" 	>> instaluj.sh
			echo "cd /tmp/rkhunter-1.4.2/"  									>> instaluj.sh
			echo "sudo ./installer.sh --layout default --install" 				>> instaluj.sh
			echo "cd /tmp/netext73" 											>> instaluj.sh
			echo "sudo rm -rf /tmp/rkhunter-1.4.2" 								>> instaluj.sh
		fi
		echo "sudo /usr/local/bin/rkhunter --update" 							>> instaluj.sh
		echo "sudo /usr/local/bin/rkhunter --propupd" 							>> instaluj.sh
		echo "/usr/bin/yes | sudo rkhunter --check" 							>> instaluj.sh
		echo "sudo chmod 644 /var/log/rkhunter.log" 							>> instaluj.sh
		instalacja2 Rkhunter
		if [ -e /var/log/rkhunter.log ]; then
			yad --center --title="$nazwa_skryptu1 - rkhunter.log" --window-icon="/opt/NeteXt73/ikony/logi.png" --on-top --width=$((860*$skala)) --height=$((500*$skala)) --text-info --filename=/var/log/rkhunter.log --button="$TEXT_ZAMKNIJ:1"
		fi
	#test HDD/SSD
	elif [ "$skrypt" = "$MENU_HDD" ]; then
		KEY="$(echo $RANDOM)"
		a=1
		klawisz_trim=""
		if [ "$(hdparm -I /dev/sd* | grep 'TRIM supported')" != "" ];then
			klawisz_trim="--button="Trim:4""
		fi
		for i in $(echo $lista_dyskow); do
			#size
			res[$a]=$(mktemp --tmpdir=/tmp/netext73 netext73_$a.XXXXXXXX)
			yad --plug=$KEY --tabnum=$a --list --column="Filesystem" --column="Size" --column="Used" --column="Free" --column="Used%" --column="Mounted on" $(df -h | grep /dev/$i) 1> ${res[$a]} &
			a=$(( $a + 1 ))
			tabulator=$(echo $tabulator --tab="$i")
			#smart info
			res[$a]=$(mktemp --tmpdir=/tmp/netext73 netext73_$a.XXXXXXXX)
			smartctl -i /dev/$i > /tmp/netext73/$i_$a.txt
			smartctl -H /dev/$i >> /tmp/netext73/$i_$a.txt
			smartctl -l error /dev/$i >> /tmp/netext73/$i_$a.txt
			sed -i '/smartctl/ d' /tmp/netext73/$i_$a.txt
			sed -i '/Copyright/ d' /tmp/netext73/$i_$a.txt
			sed -i '/===/ d' /tmp/netext73/$i_$a.txt
			sed -i '/^[ \t]*$/ d' /tmp/netext73/$i_$a.txt
			yad --plug=$KEY --tabnum=$a --text-info --filename=/tmp/netext73/$i_$a.txt 1> ${res[$a]} &
			a=$(( $a + 1 ))
			tabulator=$(echo $tabulator --tab="$i:Smart-Info")
			#SMART info
			res[$a]=$(mktemp --tmpdir=/tmp/netext73 netext73_$a.XXXXXXXX)
			smartctl -A /dev/$i | grep -v '<==' | \
			  awk -F ' ' '$2 ~ /Power_Cycle_Count|Start_Stop_Count|Load_Cycle_Count|Reallocated_Sector_Ct/ \
								{ printf "    %3d %-25s = %8d \n", $1, $2, $10 } ; \
						  $2 ~ /Used_Rsvd_Blk_Cnt_Chip|Used_Rsvd_Blk_Cnt_Tot|Unused_Rsvd_Blk_Cnt_Tot/ \
								{ printf "    %3d %-25s = %8d \n", $1, $2, $10 } ; \
						  $2 ~ /Power_On_Hours/ \
								{ printf "    %3d %-25s = %8d %s\n", $1, $2, $10, "[h]" } ; \
						  $2 ~ /Temperature_Celsius/ \
								{ printf "    %3d %-25s = %8d %s %s %s %s\n", $1, $2, $10, $11, $12, $13, "[°C]" } ; \
						  $2 ~ /Airflow_Temperature_Cel/ \
								{ printf "    %3d %-25s = %8d %s\n", $1, $2, $10, "[°C]" } ; \
						  $2 ~ /Host_Writes/ \
								{ printf "    %3d %-25s = %8.3f %s\n", $1, $2, $10 / 32768.0, "[TB]" } ; \
						  $2 ~ /Total_LBAs_Written/ \
								{ printf "    %3d %-25s = %8.3f %s\n", $1, $2, $10 / 2147483648.0, "[TB]" } ; \
						  $2 ~ /NAND_Writes_1GiB/ \
								{ printf "    %3d %-25s = %8d %s\n", $1, $2, $10, "[GB]" } ; \
						  $2 ~ /Available_Reservd_Space|Media_Wearout_Indicator|Wear_Leveling_Count/ \
								{ printf "    %3d %-25s = %8d %s\n", $1, $2, $4, "[%]" }' > /tmp/netext73/$i_$a.txt
			yad --plug=$KEY --tabnum=$a --text-info --filename=/tmp/netext73/$i_$a.txt 1> ${res[$a]} &
			a=$(( $a + 1 ))
			tabulator=$(echo $tabulator --tab="$i:Smart-Attributes")
		done
		yad --notebook --key=$KEY --image=drive-harddisk --center --tab-pos="left" --title="$nazwa_skryptu1 " $tabulator --width=$((860*$skala)) --height=$((500*$skala)) --on-top $klawisz_trim --button="BadSectorsTest:3" --button="SpeedTest:2" --button="$TEXT_ZAMKNIJ:1" 
		klawisz=$?
		if [ "$klawisz" = "2" ];then
			rm -f /tmp/netext73/*.txt 
			rm -f /tmp/netext73/netext73_*
			please_wait
			KEY="$(echo $RANDOM)"
			a=1
			tabulator=""
			
			for i in $(echo $lista_dyskow); do
				if [ "$(cat /sys/block/$i/queue/rotational)" = "0" ]; then
					res[$a]=$(mktemp --tmpdir=/tmp/netext73 netext73_$a.XXXXXXXX)
					hdparm -t -T /dev/$i > /tmp/netext73/$i_$a.txt
					sed -i 's/MB /MB \n /g' /tmp/netext73/$i_$a.txt
					yad --plug=$KEY --tabnum=$a --text-info --filename=/tmp/netext73/$i_$a.txt 1> ${res[$a]} &
					a=$(( $a + 1 ))
					tabulator=$(echo $tabulator --tab="SpeedTestSSD:$i")
				elif [ "$(cat /sys/block/$i/queue/rotational)" = "1" ]; then
					res[$a]=$(mktemp --tmpdir=/tmp/netext73 netext73_$a.XXXXXXXX)
					hdparm -t -T /dev/$i > /tmp/netext73/$i_$a.txt
					sed -i 's/MB /MB \n /g' /tmp/netext73/$i_$a.txt
					yad --plug=$KEY --tabnum=$a --text-info --filename=/tmp/netext73/$i_$a.txt 1> ${res[$a]} &
					a=$(( $a + 1 ))
					tabulator=$(echo $tabulator --tab="SpeedTestHDD:$i")
				fi
			done
			please_wait kill
			yad --notebook --key=$KEY --image=drive-harddisk --center --tab-pos="left" --title="$nazwa_skryptu1 " $tabulator --width=$((860*$skala)) --height=$((500*$skala)) --on-top --button="$TEXT_ZAMKNIJ:1"
		elif [ "$klawisz" = "3" ];then
			if [ "$(dpkg -l | grep -e smartmontools | grep ii)" = "" ]; then
				xterm  -T "smartmontools" -e bash -c "sudo apt install smartmontools"
			fi
			
			naglowek > instaluj.sh
			echo "for i in \$(df -h | awk '{print \$1}' | grep /dev/ | sort); do sudo badblocks -v \$i; done" >> instaluj.sh
			instalacja3 BadBlockTest
		elif [ "$klawisz" = "4" ];then
			naglowek > instaluj.sh
			echo "sudo fstrim -v / &" >> instaluj.sh
			echo "echo 'Work in progress'" >> instaluj.sh
			echo "pid=\$! # Process Id of the previous running command" >> instaluj.sh
			echo "spin='-\|/'" >> instaluj.sh
			echo "i=0" >> instaluj.sh
			echo "while kill -0 \$pid 2>/dev/null" >> instaluj.sh
			echo "do" >> instaluj.sh
			echo "i=\$(( (i+1) %4 ))" >> instaluj.sh
			echo "printf \"\r\${spin:\$i:1}\"" >> instaluj.sh
			echo "sleep .1" >> instaluj.sh
			echo "done" >> instaluj.sh
			instalacja3 Trim
		fi
		rm -f /tmp/netext73/*.txt 
		rm -f /tmp/netext73/netext73_*
	fi
fi

